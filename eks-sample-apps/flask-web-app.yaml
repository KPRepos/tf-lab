---
apiVersion: v1
kind: Namespace
metadata:
  name: flask-web-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: flask-web-app
  name: flask-web-app-deployment
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: flask-web-app
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flask-web-app
    spec:
      containers:
      - name: flask-web-app
        image: 476895560875.dkr.ecr.us-west-2.amazonaws.com/flask-web-app:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5555
        env:
          - name: db_password
            valueFrom:
              secretKeyRef:
                name: flaskapi-secrets
                key: mongodb_password
          - name: db_host
            value: db_host_ip
---
apiVersion: v1
kind: Service
metadata:
  # labels:
  #   app.kubernetes.io/name: flask-web-app
  namespace: flask-web-app
  name: service-flask-web-app
spec:
  ports:
    - nodePort: 31479
      port: 80
      targetPort: 5555
  type: NodePort
  selector:
    app.kubernetes.io/name: flask-web-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: flask-web-app
  name: ingress-flask-web-app
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/security-groups: eks_alb_sg
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: service-flask-web-app
              port:
                number: 80